version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
    networks:
      - jaeger
    environment:
      - ES_JAVA_OPTS=-Xms128m -Xmx128m
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.ml.enabled=false
      - xpack.watcher.enabled=false
    deploy:
      resources:
        limits:
          memory: 512m
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=10s" ]
      interval: 50s
      timeout: 10s
      retries: 10

  ilm-setup:
    image: appropriate/curl
    depends_on:
      elasticsearch:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      curl -X PUT http://elasticsearch:9200/_ilm/policy/jaeger-ilm-policy -H 'Content-Type: application/json' -d'
      {
        \"policy\": {
          \"phases\": {
            \"hot\": {
              \"actions\": {
                \"rollover\": {
                  \"max_size\": \"100mb\",
                  \"max_age\": \"3m\"
                }
              }
            },
            \"delete\": {
              \"min_age\": \"5m\",
              \"actions\": {
                \"delete\": {}
              }
            }
          }
        }
      }'
      "
    restart: "no"
    networks:
      - jaeger

  es-rollover-init:
    image: jaegertracing/jaeger-es-rollover:latest
    container_name: jaeger-es-init
    depends_on:
      ilm-setup:
        condition: service_completed_successfully
    command: >
      init http://elasticsearch:9200
      --es.use-ilm
      --index-prefix jaeger-prod
    networks:
      - jaeger
    restart: "no"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - jaeger
    depends_on:
      - elasticsearch

  flight:
    build:
      context: ./flight
    container_name: flight
    ports:
      - "8080:8080"
    networks:
      - jaeger
    environment:
      - JAVA_OPTS=-Xmx384m -Xms256m
      - SPRING_PROFILES_ACTIVE=default
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - OTEL_SERVICE_NAME=flight
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_INSTRUMENTATION_HTTP_ENABLED=true
      - OTEL_INSTRUMENTATION_SPRING_WEB_ENABLED=true
      - OTEL_PROPAGATORS=tracecontext,baggage
      - OTEL_EXPORTER_OTLP_TIMEOUT=10000
    deploy:
      resources:
        limits:
          memory: 500m
    restart: unless-stopped
    depends_on:
      - jaeger-collector

  ticket:
    build:
      context: ./ticket
    container_name: ticket
    ports:
      - "8081:8081"
    networks:
      - jaeger
    environment:
      - JAVA_OPTS=-Xmx384m -Xms256m
      - SPRING_PROFILES_ACTIVE=default
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - OTEL_SERVICE_NAME=ticket
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_INSTRUMENTATION_HTTP_ENABLED=true
      - OTEL_INSTRUMENTATION_SPRING_WEB_ENABLED=true
      - OTEL_PROPAGATORS=tracecontext,baggage
      - OTEL_EXPORTER_OTLP_TIMEOUT=10000
    deploy:
      resources:
        limits:
          memory: 500m
    restart: unless-stopped
    depends_on:
      - jaeger-collector

  payment:
    build:
      context: ./payment
    container_name: payment
    ports:
      - "8082:8082"
    networks:
      - jaeger
    environment:
      - JAVA_OPTS=-Xmx384m -Xms256m
      - SPRING_PROFILES_ACTIVE=default
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - OTEL_SERVICE_NAME=payment
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_INSTRUMENTATION_HTTP_ENABLED=true
      - OTEL_INSTRUMENTATION_SPRING_WEB_ENABLED=true
      - OTEL_PROPAGATORS=tracecontext,baggage
      - OTEL_EXPORTER_OTLP_TIMEOUT=10000
    deploy:
      resources:
        limits:
          memory: 500m
    restart: unless-stopped
    depends_on:
      - jaeger-collector

  reservation:
    build:
      context: ./reservation
    container_name: reservation
    ports:
      - "8083:8083"
    networks:
      - jaeger
    environment:
      - JAVA_OPTS=-Xmx384m -Xms256m
      - SPRING_PROFILES_ACTIVE=default
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - OTEL_SERVICE_NAME=reservation
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_INSTRUMENTATION_HTTP_ENABLED=true
      - OTEL_INSTRUMENTATION_SPRING_WEB_ENABLED=true
      - OTEL_PROPAGATORS=tracecontext,baggage
      - OTEL_EXPORTER_OTLP_TIMEOUT=10000
    deploy:
      resources:
        limits:
          memory: 500m
    restart: unless-stopped
    depends_on:
      - jaeger-collector

  jaeger-collector:
    build:
      context: ./jaeger/collector
    container_name: jaeger-collector
    ports:
      - "4317:4317" # OTLP grpc
      - "4318:4318" # OTLP http
      - "14269:14269" # Health check
      - "16685:16685" # Jaeger gRPC
      - "16686:16686" # Jaeger UI (Query interface)
    restart: unless-stopped
    networks:
      - jaeger
    command: ["--config", "/jaeger/config.yaml"]

networks:
  jaeger:
    driver: bridge
    external: true
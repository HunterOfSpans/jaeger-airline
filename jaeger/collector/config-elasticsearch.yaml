service:
  extensions: [jaeger_storage, healthcheckv2, remote_sampling]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [jaeger_storage_exporter]
  telemetry:
    resource:
      service.name: jaeger-collector
    logs:
      level: debug
    # TODO Initialize telemetry tracer once OTEL released new feature.
    # https://github.com/open-telemetry/opentelemetry-collector/issues/10663

extensions:
  healthcheckv2:
    use_v2: true
    http:

  jaeger_query:
    storage:
      traces: es

  jaeger_storage:
    backends:
      es:
        elasticsearch:
          server_urls:
            # - https://host.docker.internal:9200
            - https://localhost:9200
          indices:
            index_prefix: "jaeger-prod"
          use_aliases: true
          # use_ilm: true          
          auth:
            basic:
              username: elastic
              password: Scg7B4FlXFC4F7DZoIkj
          # elastic search tls 연결 시 사용
          tls:
            # ca_file: certs/ca.crt 
            ca_file: /Users/minhyeok/Documents/project/jaeger/collector/http_ca.crt
            insecure_skip_verify: true # ca file 의 SAN 검증 무시
  remote_sampling:
    # You can either use file or adaptive sampling strategy in remote_sampling
    # file:
    #   path: ./cmd/jaeger/sampling-strategies.json
    adaptive:
      sampling_store: es
    http:
    grpc:

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:

exporters:
  jaeger_storage_exporter:
    trace_storage: es
